{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpenseFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89da0c0d.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n    // const [userInput, setUserInput] = useState({\n    //   enteredTitle: '',\n    //   enteredAmount: '',\n    //   enteredDate: '',\n    // });\n  \n    const titleChangeHandler = (event) => {\n      setEnteredTitle(event.target.value);\n      // setUserInput({\n      //   ...userInput,\n      //   enteredTitle: event.target.value,\n      // });\n      // setUserInput((prevState) => {\n      //   return { ...prevState, enteredTitle: event.target.value };\n      // });\n    };\n  \n    const amountChangeHandler = (event) => {\n      setEnteredAmount(event.target.value);\n      // setUserInput({\n      //   ...userInput,\n      //   enteredAmount: event.target.value,\n      // });\n    };\n  \n    const dateChangeHandler = (event) => {\n      setEnteredDate(event.target.value);\n      // setUserInput({\n      //   ...userInput,\n      //   enteredDate: event.target.value,\n      // });\n    };\n  \n    const submitHandler = (event) => {\n      event.preventDefault();\n  \n      const expenseData = {\n        title: enteredTitle,\n        amount: enteredAmount,\n        date: new Date(enteredDate),\n      };\n  \n      props.onSaveExpenseData(expenseData);\n      setEnteredTitle('');\n      setEnteredAmount('');\n      setEnteredDate('');\n    };\n  \n    return (\n      <form onSubmit={submitHandler}>\n        <div className='new-expense__controls'>\n          <div className='new-expense__control'>\n            <label>Title</label>\n            <input\n              type='text'\n              value={enteredTitle}\n              onChange={titleChangeHandler}\n            />\n          </div>\n          <div className='new-expense__control'>\n            <label>Amount</label>\n            <input\n              type='number'\n              min='0.01'\n              step='0.01'\n              value={enteredAmount}\n              onChange={amountChangeHandler}\n            />\n          </div>\n          <div className='new-expense__control'>\n            <label>Date</label>\n            <input\n              type='date'\n              min='2018-01-01'\n              max='2022-12-31'\n              value={enteredDate}\n              onChange={dateChangeHandler}\n            />\n          </div>\n        </div>\n        <div className='new-expense__actions'>\n          <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n          <button type='submit'>Add Expense</button>\n        </div>\n      </form>\n    );\n  };\n\nexport default ExpenseForm;","import React, {useState} from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n    const[isEditing, setIsEditing] = useState(false);\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        };\n        props.onAddExpense(expenseData);\n        setIsEditing(false);\n    };\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    };\n    const stopEditingHandler = () => {\n        setIsEditing(false);\n    };\n    return(\n        <div className='new-expense'>\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n            {isEditing && <ExpenseForm \n            onSaveExpenseData={saveExpenseDataHandler} \n            onCancel= {stopEditingHandler}/>}\n        </div>\n    );\n};\n\nexport default NewExpense;","import React from 'react';\nimport '../UI/Card.css';\n\nfunction Card(props){\n    const classes = 'card ' + props.className;\n    return (\n    <div className={classes}>{props.children}</div>\n)}\n\nexport default Card;","import React from 'react';\nimport './ExpenseFilter.css';\n\nconst ExpenseFilter = (props) => {\n    const dropdownChangeHandler = (event) => {\n        props.onChangeFilter(event.target.value);\n    };\n    return(\n        <div className='expenses-filter'>\n            <div className='expenses-filter__control'>\n                <label>Filter by Year</label>\n                <select value={props.selected} onChange={dropdownChangeHandler}>\n                    <option value='2022'>2022</option>\n                    <option value='2021'>2021</option>\n                    <option value='2020'>2020</option>\n                    <option value='2019'>2019</option>\n                    <option value='2018'>2018</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default ExpenseFilter;","import '../Expenses/ExpenseDate.css';\n\nfunction ExpenseDate(props){\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\n    const year = props.date.getFullYear();\n    return (\n            <div className = \"expense-date\">\n                <div className = \"expense-date__month\">{month}</div>\n                <div className = \"expense-date__day\">{day}</div>\n                <div className = \"expense-date__year\">{year}</div>\n            </div>\n    );};\n\nexport default ExpenseDate;","import React from 'react';\nimport ExpenseDate from '../Expenses/ExpenseDate';\nimport Card from '../UI/Card';\nimport '../Expenses/ExpenseItem.css';\n\n//Component function\nconst ExpenseItem = (props) => {\n    return (\n        <li>\n        <Card className=\"expense-item\">\n            <ExpenseDate date = {props.date}/>\n            <div className=\"expense-item__description\">\n                <h2 >{props.title}</h2>\n                <div className=\"expense-item__price\">${props.amount}</div>\n            </div>\n        </Card>\n        </li>\n    );\n};\n\nexport default ExpenseItem;","import './ExpensesList.css'\nimport ExpenseItem from './ExpenseItem';\n\nconst ExpensesList = props => {\nif(props.items.length === 0) {\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\n  \n}\nreturn (\n <ul className=\"expenses-list\">\n     {props.items.map((expense) => (\n    <ExpenseItem\n    key={expense.id}\n    title={expense.title}\n    amount={expense.amount}\n    date={expense.date} />\n  ))}\n </ul>\n );\n};\nexport default ExpensesList;","import './ChartBar.css';\n\nconst ChartBar = (props) => {\n    let barFillHeight = '0%';\n    if (props.maxValue > 0){\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n    }\n    return(\n        <div className='chart-bar'>\n            <div className='chart-bar__inner'>\n                <div className='chart-bar__fill' \n                style={{height: barFillHeight}}></div>\n            </div>\n            <div className='chart-bar__label'>{props.label}</div>\n        </div>\n    );\n};\n\nexport default ChartBar;","import ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMaximum = Math.max(...dataPointValues);\n    return(\n        <div className=\"chart\">\n            {props.dataPoints.map((dataPoint) => (<ChartBar \n            key={dataPoint.label}\n            value={dataPoint.value} \n            maxValue={totalMaximum}\n            label={dataPoint.label} />))}\n        </div>\n    );\n};\n\nexport default Chart;","import React from 'react';\nimport Chart from '../Chart/Chart';\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        {label: 'Jan', value: 0},\n        {label: 'Feb', value: 0},\n        {label: 'Mar', value: 0},\n        {label: 'Apr', value: 0},\n        {label: 'May', value: 0},\n        {label: 'Jun', value: 0},\n        {label: 'Jul', value: 0},\n        {label: 'Aug', value: 0},\n        {label: 'Sep', value: 0},\n        {label: 'Oct', value: 0},\n        {label: 'Nov', value: 0},\n        {label: 'Dec', value: 0},\n\n    ]\n    for(const expense of props.expenses){\n        const expenseMonth = expense.date.getMonth(); //starting from 0 =>January=>0\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n    return(\n        <Chart dataPoints={chartDataPoints}/>\n    );\n};\n\nexport default ExpensesChart;","import React, {useState} from 'react';\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\nimport \"../Expenses/Expenses.css\";\n\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n};\nconst filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  \n  return (\n    <div>\n    <Card className=\"expenses\">\n      <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\n      <ExpensesChart expenses = {filteredExpenses}/>\n      <ExpensesList items={filteredExpenses} />\n    </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, {useState} from 'react';\nimport NewExpense from './components/NewExpense/NewExpense.js'\nimport Expenses from './components/Expenses/Expenses.js';\n\nconst DUMMY_EXPENSES = [\n    {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: 'e2', \n    title: 'New TV', \n    amount: 799.49, \n    date: new Date(2021, 2, 12) },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n  setExpenses(prevExpenses => {\n    return[expense, ...prevExpenses];\n  } );\n\n}; \n  return (\n   <div>\n     <NewExpense onAddExpense={addExpenseHandler} />\n     <Expenses items= {expenses} />\n   </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}